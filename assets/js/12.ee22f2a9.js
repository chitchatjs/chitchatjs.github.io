(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{362:function(e,a,t){"use strict";t.r(a);var n=t(42),i=Object(n.a)({},(function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"dialog-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dialog-engine"}},[e._v("#")]),e._v(" Dialog Engine")]),e._v(" "),t("p",[e._v("A dialog engine defines the strategy a dialog manager takes to resolve user inputs and perform system actions. Currently, "),t("code",[e._v("AlexaDialogManager")]),e._v(" comes with a "),t("code",[e._v("RuleBasedDialogEngine")]),e._v(" by default. However, it's possible to create another strategy such as machine learnt dialog engine or a more sophisticated rule based or mixed dialog engine.")]),e._v(" "),t("h2",{attrs:{id:"creating-a-new-dialog-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-new-dialog-engine"}},[e._v("#")]),e._v(" Creating a new dialog engine")]),e._v(" "),t("p",[e._v("Implement the interface "),t("code",[e._v("DialogEngine")]),e._v(" from the core library "),t("code",[e._v("@chitchatjs/core")]),e._v(". You will also need to define your own "),t("code",[e._v("DialogContext")]),e._v(", "),t("code",[e._v("BuilderContext")]),e._v(" and "),t("code",[e._v("Event")]),e._v(" interfaces extending the base definitions.")])])}),[],!1,null,null,null);a.default=i.exports}}]);